//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18010
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace CN100.EnterprisePlatform.Configuration
{
    
    
    /// <summary>
    /// The DomainSection Configuration Section.
    /// </summary>
    public partial class DomainSection : global::System.Configuration.ConfigurationSection
    {
        
        #region Singleton Instance
        /// <summary>
        /// The XML name of the DomainSection Configuration Section.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string DomainSectionSectionName = "CN100SectionGroup/domainSection";
        
        /// <summary>
        /// Gets the DomainSection instance.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public static global::CN100.EnterprisePlatform.Configuration.DomainSection Instance
        {
            get
            {
                return ((global::CN100.EnterprisePlatform.Configuration.DomainSection)(global::System.Configuration.ConfigurationManager.GetSection(global::CN100.EnterprisePlatform.Configuration.DomainSection.DomainSectionSectionName)));
            }
        }
        #endregion
        
        #region Xmlns Property
        /// <summary>
        /// The XML name of the <see cref="Xmlns"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string XmlnsPropertyName = "xmlns";
        
        /// <summary>
        /// Gets the XML namespace of this Configuration Section.
        /// </summary>
        /// <remarks>
        /// This property makes sure that if the configuration file contains the XML namespace,
        /// the parser doesn't throw an exception because it encounters the unknown "xmlns" attribute.
        /// </remarks>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CN100.EnterprisePlatform.Configuration.DomainSection.XmlnsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public string Xmlns
        {
            get
            {
                return ((string)(base[global::CN100.EnterprisePlatform.Configuration.DomainSection.XmlnsPropertyName]));
            }
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public override bool IsReadOnly()
        {
            return true;
        }
        #endregion
        
        #region Urls Property
        /// <summary>
        /// The XML name of the <see cref="Urls"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string UrlsPropertyName = "urls";
        
        /// <summary>
        /// Gets or sets the Urls.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.ComponentModel.DescriptionAttribute("The Urls.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CN100.EnterprisePlatform.Configuration.DomainSection.UrlsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::CN100.EnterprisePlatform.Configuration.DomainElementCollection Urls
        {
            get
            {
                return ((global::CN100.EnterprisePlatform.Configuration.DomainElementCollection)(base[global::CN100.EnterprisePlatform.Configuration.DomainSection.UrlsPropertyName]));
            }
            set
            {
                base[global::CN100.EnterprisePlatform.Configuration.DomainSection.UrlsPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace CN100.EnterprisePlatform.Configuration
{
    
    
    /// <summary>
    /// A collection of DomainElement instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::CN100.EnterprisePlatform.Configuration.DomainElement), CollectionType=global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate, AddItemName=global::CN100.EnterprisePlatform.Configuration.DomainElementCollection.DomainElementPropertyName)]
    public partial class DomainElementCollection : global::System.Configuration.ConfigurationElementCollection
    {
        
        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::CN100.EnterprisePlatform.Configuration.DomainElement"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string DomainElementPropertyName = "url";
        #endregion
        
        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate;
            }
        }
        
        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        protected override string ElementName
        {
            get
            {
                return global::CN100.EnterprisePlatform.Configuration.DomainElementCollection.DomainElementPropertyName;
            }
        }
        
        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::CN100.EnterprisePlatform.Configuration.DomainElementCollection.DomainElementPropertyName);
        }
        
        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::CN100.EnterprisePlatform.Configuration.DomainElement)(element)).Name;
        }
        
        /// <summary>
        /// Creates a new <see cref="global::CN100.EnterprisePlatform.Configuration.DomainElement"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::CN100.EnterprisePlatform.Configuration.DomainElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::CN100.EnterprisePlatform.Configuration.DomainElement();
        }
        #endregion
        
        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::CN100.EnterprisePlatform.Configuration.DomainElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::CN100.EnterprisePlatform.Configuration.DomainElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public global::CN100.EnterprisePlatform.Configuration.DomainElement this[int index]
        {
            get
            {
                return ((global::CN100.EnterprisePlatform.Configuration.DomainElement)(base.BaseGet(index)));
            }
        }
        
        /// <summary>
        /// Gets the <see cref="global::CN100.EnterprisePlatform.Configuration.DomainElement"/> with the specified key.
        /// </summary>
        /// <param name="name">The key of the <see cref="global::CN100.EnterprisePlatform.Configuration.DomainElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public global::CN100.EnterprisePlatform.Configuration.DomainElement this[object name]
        {
            get
            {
                return ((global::CN100.EnterprisePlatform.Configuration.DomainElement)(base.BaseGet(name)));
            }
        }
        #endregion
        
        #region Add
        /// <summary>
        /// Adds the specified <see cref="global::CN100.EnterprisePlatform.Configuration.DomainElement"/> to the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="url">The <see cref="global::CN100.EnterprisePlatform.Configuration.DomainElement"/> to add.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public void Add(global::CN100.EnterprisePlatform.Configuration.DomainElement url)
        {
            base.BaseAdd(url);
        }
        #endregion
        
        #region Remove
        /// <summary>
        /// Removes the specified <see cref="global::CN100.EnterprisePlatform.Configuration.DomainElement"/> from the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="url">The <see cref="global::CN100.EnterprisePlatform.Configuration.DomainElement"/> to remove.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public void Remove(global::CN100.EnterprisePlatform.Configuration.DomainElement url)
        {
            base.BaseRemove(this.GetElementKey(url));
        }
        #endregion
        
        #region GetItem
        /// <summary>
        /// Gets the <see cref="global::CN100.EnterprisePlatform.Configuration.DomainElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::CN100.EnterprisePlatform.Configuration.DomainElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public global::CN100.EnterprisePlatform.Configuration.DomainElement GetItemAt(int index)
        {
            return ((global::CN100.EnterprisePlatform.Configuration.DomainElement)(base.BaseGet(index)));
        }
        
        /// <summary>
        /// Gets the <see cref="global::CN100.EnterprisePlatform.Configuration.DomainElement"/> with the specified key.
        /// </summary>
        /// <param name="name">The key of the <see cref="global::CN100.EnterprisePlatform.Configuration.DomainElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public global::CN100.EnterprisePlatform.Configuration.DomainElement GetItemByKey(string name)
        {
            return ((global::CN100.EnterprisePlatform.Configuration.DomainElement)(base.BaseGet(((object)(name)))));
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
    }
}
namespace CN100.EnterprisePlatform.Configuration
{
    
    
    /// <summary>
    /// The DomainElement Configuration Element.
    /// </summary>
    public partial class DomainElement : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Name Property
        /// <summary>
        /// The XML name of the <see cref="Name"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string NamePropertyName = "name";
        
        /// <summary>
        /// Gets or sets the Name.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.ComponentModel.DescriptionAttribute("The Name.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CN100.EnterprisePlatform.Configuration.DomainElement.NamePropertyName, IsRequired=true, IsKey=true, IsDefaultCollection=false)]
        public virtual string Name
        {
            get
            {
                return ((string)(base[global::CN100.EnterprisePlatform.Configuration.DomainElement.NamePropertyName]));
            }
            set
            {
                base[global::CN100.EnterprisePlatform.Configuration.DomainElement.NamePropertyName] = value;
            }
        }
        #endregion
        
        #region Url Property
        /// <summary>
        /// The XML name of the <see cref="Url"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string UrlPropertyName = "url";
        
        /// <summary>
        /// Gets or sets the Url.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.ComponentModel.DescriptionAttribute("The Url.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CN100.EnterprisePlatform.Configuration.DomainElement.UrlPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual string Url
        {
            get
            {
                return ((string)(base[global::CN100.EnterprisePlatform.Configuration.DomainElement.UrlPropertyName]));
            }
            set
            {
                base[global::CN100.EnterprisePlatform.Configuration.DomainElement.UrlPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace CN100.EnterprisePlatform.Configuration
{
    
    
    /// <summary>
    /// The WcfSection Configuration Section.
    /// </summary>
    public partial class WcfSection : global::System.Configuration.ConfigurationSection
    {
        
        #region Singleton Instance
        /// <summary>
        /// The XML name of the WcfSection Configuration Section.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string WcfSectionSectionName = "CN100SectionGroup/wcfSection";
        
        /// <summary>
        /// Gets the WcfSection instance.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public static global::CN100.EnterprisePlatform.Configuration.WcfSection Instance
        {
            get
            {
                return ((global::CN100.EnterprisePlatform.Configuration.WcfSection)(global::System.Configuration.ConfigurationManager.GetSection(global::CN100.EnterprisePlatform.Configuration.WcfSection.WcfSectionSectionName)));
            }
        }
        #endregion
        
        #region Xmlns Property
        /// <summary>
        /// The XML name of the <see cref="Xmlns"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string XmlnsPropertyName = "xmlns";
        
        /// <summary>
        /// Gets the XML namespace of this Configuration Section.
        /// </summary>
        /// <remarks>
        /// This property makes sure that if the configuration file contains the XML namespace,
        /// the parser doesn't throw an exception because it encounters the unknown "xmlns" attribute.
        /// </remarks>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CN100.EnterprisePlatform.Configuration.WcfSection.XmlnsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public string Xmlns
        {
            get
            {
                return ((string)(base[global::CN100.EnterprisePlatform.Configuration.WcfSection.XmlnsPropertyName]));
            }
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public override bool IsReadOnly()
        {
            return true;
        }
        #endregion
        
        #region Hosts Property
        /// <summary>
        /// The XML name of the <see cref="Hosts"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string HostsPropertyName = "hosts";
        
        /// <summary>
        /// Gets or sets wcf service address
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.ComponentModel.DescriptionAttribute("wcf service address")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CN100.EnterprisePlatform.Configuration.WcfSection.HostsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::CN100.EnterprisePlatform.Configuration.WcfElementCollection Hosts
        {
            get
            {
                return ((global::CN100.EnterprisePlatform.Configuration.WcfElementCollection)(base[global::CN100.EnterprisePlatform.Configuration.WcfSection.HostsPropertyName]));
            }
            set
            {
                base[global::CN100.EnterprisePlatform.Configuration.WcfSection.HostsPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace CN100.EnterprisePlatform.Configuration
{
    
    
    /// <summary>
    /// The ImageSection Configuration Section.
    /// </summary>
    public partial class ImageSection : global::System.Configuration.ConfigurationSection
    {
        
        #region Singleton Instance
        /// <summary>
        /// The XML name of the ImageSection Configuration Section.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string ImageSectionSectionName = "CN100SectionGroup/imageSection";
        
        /// <summary>
        /// Gets the ImageSection instance.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public static global::CN100.EnterprisePlatform.Configuration.ImageSection Instance
        {
            get
            {
                return ((global::CN100.EnterprisePlatform.Configuration.ImageSection)(global::System.Configuration.ConfigurationManager.GetSection(global::CN100.EnterprisePlatform.Configuration.ImageSection.ImageSectionSectionName)));
            }
        }
        #endregion
        
        #region Xmlns Property
        /// <summary>
        /// The XML name of the <see cref="Xmlns"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string XmlnsPropertyName = "xmlns";
        
        /// <summary>
        /// Gets the XML namespace of this Configuration Section.
        /// </summary>
        /// <remarks>
        /// This property makes sure that if the configuration file contains the XML namespace,
        /// the parser doesn't throw an exception because it encounters the unknown "xmlns" attribute.
        /// </remarks>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CN100.EnterprisePlatform.Configuration.ImageSection.XmlnsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public string Xmlns
        {
            get
            {
                return ((string)(base[global::CN100.EnterprisePlatform.Configuration.ImageSection.XmlnsPropertyName]));
            }
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public override bool IsReadOnly()
        {
            return true;
        }
        #endregion
        
        #region Urls Property
        /// <summary>
        /// The XML name of the <see cref="Urls"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string UrlsPropertyName = "urls";
        
        /// <summary>
        /// Gets or sets the Urls.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.ComponentModel.DescriptionAttribute("The Urls.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CN100.EnterprisePlatform.Configuration.ImageSection.UrlsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::CN100.EnterprisePlatform.Configuration.ImageElementCollection Urls
        {
            get
            {
                return ((global::CN100.EnterprisePlatform.Configuration.ImageElementCollection)(base[global::CN100.EnterprisePlatform.Configuration.ImageSection.UrlsPropertyName]));
            }
            set
            {
                base[global::CN100.EnterprisePlatform.Configuration.ImageSection.UrlsPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace CN100.EnterprisePlatform.Configuration
{
    
    
    /// <summary>
    /// The MqSection Configuration Section.
    /// </summary>
    public partial class MqSection : global::System.Configuration.ConfigurationSection
    {
        
        #region Singleton Instance
        /// <summary>
        /// The XML name of the MqSection Configuration Section.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string MqSectionSectionName = "CN100SectionGroup/mqSection";
        
        /// <summary>
        /// Gets the MqSection instance.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public static global::CN100.EnterprisePlatform.Configuration.MqSection Instance
        {
            get
            {
                return ((global::CN100.EnterprisePlatform.Configuration.MqSection)(global::System.Configuration.ConfigurationManager.GetSection(global::CN100.EnterprisePlatform.Configuration.MqSection.MqSectionSectionName)));
            }
        }
        #endregion
        
        #region Xmlns Property
        /// <summary>
        /// The XML name of the <see cref="Xmlns"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string XmlnsPropertyName = "xmlns";
        
        /// <summary>
        /// Gets the XML namespace of this Configuration Section.
        /// </summary>
        /// <remarks>
        /// This property makes sure that if the configuration file contains the XML namespace,
        /// the parser doesn't throw an exception because it encounters the unknown "xmlns" attribute.
        /// </remarks>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CN100.EnterprisePlatform.Configuration.MqSection.XmlnsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public string Xmlns
        {
            get
            {
                return ((string)(base[global::CN100.EnterprisePlatform.Configuration.MqSection.XmlnsPropertyName]));
            }
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public override bool IsReadOnly()
        {
            return true;
        }
        #endregion
        
        #region Hosts Property
        /// <summary>
        /// The XML name of the <see cref="Hosts"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string HostsPropertyName = "hosts";
        
        /// <summary>
        /// Gets or sets the Hosts.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.ComponentModel.DescriptionAttribute("The Hosts.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CN100.EnterprisePlatform.Configuration.MqSection.HostsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::CN100.EnterprisePlatform.Configuration.MqElementCollection Hosts
        {
            get
            {
                return ((global::CN100.EnterprisePlatform.Configuration.MqElementCollection)(base[global::CN100.EnterprisePlatform.Configuration.MqSection.HostsPropertyName]));
            }
            set
            {
                base[global::CN100.EnterprisePlatform.Configuration.MqSection.HostsPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace CN100.EnterprisePlatform.Configuration
{
    
    
    /// <summary>
    /// A collection of WcfItemsElementCollection instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::CN100.EnterprisePlatform.Configuration.WcfItemsElementCollection), CollectionType=global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate, AddItemName=global::CN100.EnterprisePlatform.Configuration.WcfElementCollection.WcfItemsElementCollectionPropertyName)]
    public partial class WcfElementCollection : global::System.Configuration.ConfigurationElementCollection
    {
        
        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::CN100.EnterprisePlatform.Configuration.WcfItemsElementCollection"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string WcfItemsElementCollectionPropertyName = "items";
        #endregion
        
        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate;
            }
        }
        
        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        protected override string ElementName
        {
            get
            {
                return global::CN100.EnterprisePlatform.Configuration.WcfElementCollection.WcfItemsElementCollectionPropertyName;
            }
        }
        
        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::CN100.EnterprisePlatform.Configuration.WcfElementCollection.WcfItemsElementCollectionPropertyName);
        }
        
        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::CN100.EnterprisePlatform.Configuration.WcfItemsElementCollection)(element)).Name;
        }
        
        /// <summary>
        /// Creates a new <see cref="global::CN100.EnterprisePlatform.Configuration.WcfItemsElementCollection"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::CN100.EnterprisePlatform.Configuration.WcfItemsElementCollection"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::CN100.EnterprisePlatform.Configuration.WcfItemsElementCollection();
        }
        #endregion
        
        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::CN100.EnterprisePlatform.Configuration.WcfItemsElementCollection"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::CN100.EnterprisePlatform.Configuration.WcfItemsElementCollection"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public global::CN100.EnterprisePlatform.Configuration.WcfItemsElementCollection this[int index]
        {
            get
            {
                return ((global::CN100.EnterprisePlatform.Configuration.WcfItemsElementCollection)(base.BaseGet(index)));
            }
        }
        
        /// <summary>
        /// Gets the <see cref="global::CN100.EnterprisePlatform.Configuration.WcfItemsElementCollection"/> with the specified key.
        /// </summary>
        /// <param name="name">The key of the <see cref="global::CN100.EnterprisePlatform.Configuration.WcfItemsElementCollection"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public global::CN100.EnterprisePlatform.Configuration.WcfItemsElementCollection this[object name]
        {
            get
            {
                return ((global::CN100.EnterprisePlatform.Configuration.WcfItemsElementCollection)(base.BaseGet(name)));
            }
        }
        #endregion
        
        #region Add
        /// <summary>
        /// Adds the specified <see cref="global::CN100.EnterprisePlatform.Configuration.WcfItemsElementCollection"/> to the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="items">The <see cref="global::CN100.EnterprisePlatform.Configuration.WcfItemsElementCollection"/> to add.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public void Add(global::CN100.EnterprisePlatform.Configuration.WcfItemsElementCollection items)
        {
            base.BaseAdd(items);
        }
        #endregion
        
        #region Remove
        /// <summary>
        /// Removes the specified <see cref="global::CN100.EnterprisePlatform.Configuration.WcfItemsElementCollection"/> from the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="items">The <see cref="global::CN100.EnterprisePlatform.Configuration.WcfItemsElementCollection"/> to remove.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public void Remove(global::CN100.EnterprisePlatform.Configuration.WcfItemsElementCollection items)
        {
            base.BaseRemove(this.GetElementKey(items));
        }
        #endregion
        
        #region GetItem
        /// <summary>
        /// Gets the <see cref="global::CN100.EnterprisePlatform.Configuration.WcfItemsElementCollection"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::CN100.EnterprisePlatform.Configuration.WcfItemsElementCollection"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public global::CN100.EnterprisePlatform.Configuration.WcfItemsElementCollection GetItemAt(int index)
        {
            return ((global::CN100.EnterprisePlatform.Configuration.WcfItemsElementCollection)(base.BaseGet(index)));
        }
        
        /// <summary>
        /// Gets the <see cref="global::CN100.EnterprisePlatform.Configuration.WcfItemsElementCollection"/> with the specified key.
        /// </summary>
        /// <param name="name">The key of the <see cref="global::CN100.EnterprisePlatform.Configuration.WcfItemsElementCollection"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public global::CN100.EnterprisePlatform.Configuration.WcfItemsElementCollection GetItemByKey(string name)
        {
            return ((global::CN100.EnterprisePlatform.Configuration.WcfItemsElementCollection)(base.BaseGet(((object)(name)))));
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
    }
}
namespace CN100.EnterprisePlatform.Configuration
{
    
    
    /// <summary>
    /// The WcfElement Configuration Element.
    /// </summary>
    public partial class WcfElement : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Ip Property
        /// <summary>
        /// The XML name of the <see cref="Ip"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string IpPropertyName = "ip";
        
        /// <summary>
        /// Gets or sets service IP address
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.ComponentModel.DescriptionAttribute("Service IP address")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CN100.EnterprisePlatform.Configuration.WcfElement.IpPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue="127.0.0.1")]
        public virtual string Ip
        {
            get
            {
                return ((string)(base[global::CN100.EnterprisePlatform.Configuration.WcfElement.IpPropertyName]));
            }
            set
            {
                base[global::CN100.EnterprisePlatform.Configuration.WcfElement.IpPropertyName] = value;
            }
        }
        #endregion
        
        #region Port Property
        /// <summary>
        /// The XML name of the <see cref="Port"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string PortPropertyName = "port";
        
        /// <summary>
        /// Gets or sets service port number
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.ComponentModel.DescriptionAttribute("Service port number")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CN100.EnterprisePlatform.Configuration.WcfElement.PortPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual int Port
        {
            get
            {
                return ((int)(base[global::CN100.EnterprisePlatform.Configuration.WcfElement.PortPropertyName]));
            }
            set
            {
                base[global::CN100.EnterprisePlatform.Configuration.WcfElement.PortPropertyName] = value;
            }
        }
        #endregion
        
        #region IsDefault Property
        /// <summary>
        /// The XML name of the <see cref="IsDefault"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string IsDefaultPropertyName = "isDefault";
        
        /// <summary>
        /// Gets or sets the IsDefault.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.ComponentModel.DescriptionAttribute("The IsDefault.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CN100.EnterprisePlatform.Configuration.WcfElement.IsDefaultPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue=false)]
        public virtual bool IsDefault
        {
            get
            {
                return ((bool)(base[global::CN100.EnterprisePlatform.Configuration.WcfElement.IsDefaultPropertyName]));
            }
            set
            {
                base[global::CN100.EnterprisePlatform.Configuration.WcfElement.IsDefaultPropertyName] = value;
            }
        }
        #endregion
        
        #region Name Property
        /// <summary>
        /// The XML name of the <see cref="Name"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string NamePropertyName = "name";
        
        /// <summary>
        /// Gets or sets the Name.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.ComponentModel.DescriptionAttribute("The Name.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CN100.EnterprisePlatform.Configuration.WcfElement.NamePropertyName, IsRequired=true, IsKey=true, IsDefaultCollection=false)]
        public virtual string Name
        {
            get
            {
                return ((string)(base[global::CN100.EnterprisePlatform.Configuration.WcfElement.NamePropertyName]));
            }
            set
            {
                base[global::CN100.EnterprisePlatform.Configuration.WcfElement.NamePropertyName] = value;
            }
        }
        #endregion
    }
}
namespace CN100.EnterprisePlatform.Configuration
{
    
    
    /// <summary>
    /// A collection of ImageElement instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::CN100.EnterprisePlatform.Configuration.ImageElement), CollectionType=global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate, AddItemName=global::CN100.EnterprisePlatform.Configuration.ImageElementCollection.ImageElementPropertyName)]
    public partial class ImageElementCollection : global::System.Configuration.ConfigurationElementCollection
    {
        
        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::CN100.EnterprisePlatform.Configuration.ImageElement"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string ImageElementPropertyName = "url";
        #endregion
        
        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate;
            }
        }
        
        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        protected override string ElementName
        {
            get
            {
                return global::CN100.EnterprisePlatform.Configuration.ImageElementCollection.ImageElementPropertyName;
            }
        }
        
        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::CN100.EnterprisePlatform.Configuration.ImageElementCollection.ImageElementPropertyName);
        }
        
        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::CN100.EnterprisePlatform.Configuration.ImageElement)(element)).Name;
        }
        
        /// <summary>
        /// Creates a new <see cref="global::CN100.EnterprisePlatform.Configuration.ImageElement"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::CN100.EnterprisePlatform.Configuration.ImageElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::CN100.EnterprisePlatform.Configuration.ImageElement();
        }
        #endregion
        
        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::CN100.EnterprisePlatform.Configuration.ImageElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::CN100.EnterprisePlatform.Configuration.ImageElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public global::CN100.EnterprisePlatform.Configuration.ImageElement this[int index]
        {
            get
            {
                return ((global::CN100.EnterprisePlatform.Configuration.ImageElement)(base.BaseGet(index)));
            }
        }
        
        /// <summary>
        /// Gets the <see cref="global::CN100.EnterprisePlatform.Configuration.ImageElement"/> with the specified key.
        /// </summary>
        /// <param name="name">The key of the <see cref="global::CN100.EnterprisePlatform.Configuration.ImageElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public global::CN100.EnterprisePlatform.Configuration.ImageElement this[object name]
        {
            get
            {
                return ((global::CN100.EnterprisePlatform.Configuration.ImageElement)(base.BaseGet(name)));
            }
        }
        #endregion
        
        #region Add
        /// <summary>
        /// Adds the specified <see cref="global::CN100.EnterprisePlatform.Configuration.ImageElement"/> to the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="url">The <see cref="global::CN100.EnterprisePlatform.Configuration.ImageElement"/> to add.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public void Add(global::CN100.EnterprisePlatform.Configuration.ImageElement url)
        {
            base.BaseAdd(url);
        }
        #endregion
        
        #region Remove
        /// <summary>
        /// Removes the specified <see cref="global::CN100.EnterprisePlatform.Configuration.ImageElement"/> from the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="url">The <see cref="global::CN100.EnterprisePlatform.Configuration.ImageElement"/> to remove.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public void Remove(global::CN100.EnterprisePlatform.Configuration.ImageElement url)
        {
            base.BaseRemove(this.GetElementKey(url));
        }
        #endregion
        
        #region GetItem
        /// <summary>
        /// Gets the <see cref="global::CN100.EnterprisePlatform.Configuration.ImageElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::CN100.EnterprisePlatform.Configuration.ImageElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public global::CN100.EnterprisePlatform.Configuration.ImageElement GetItemAt(int index)
        {
            return ((global::CN100.EnterprisePlatform.Configuration.ImageElement)(base.BaseGet(index)));
        }
        
        /// <summary>
        /// Gets the <see cref="global::CN100.EnterprisePlatform.Configuration.ImageElement"/> with the specified key.
        /// </summary>
        /// <param name="name">The key of the <see cref="global::CN100.EnterprisePlatform.Configuration.ImageElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public global::CN100.EnterprisePlatform.Configuration.ImageElement GetItemByKey(string name)
        {
            return ((global::CN100.EnterprisePlatform.Configuration.ImageElement)(base.BaseGet(((object)(name)))));
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
    }
}
namespace CN100.EnterprisePlatform.Configuration
{
    
    
    /// <summary>
    /// The ImageElement Configuration Element.
    /// </summary>
    public partial class ImageElement : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Name Property
        /// <summary>
        /// The XML name of the <see cref="Name"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string NamePropertyName = "name";
        
        /// <summary>
        /// Gets or sets the Name.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.ComponentModel.DescriptionAttribute("The Name.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CN100.EnterprisePlatform.Configuration.ImageElement.NamePropertyName, IsRequired=true, IsKey=true, IsDefaultCollection=false)]
        public virtual string Name
        {
            get
            {
                return ((string)(base[global::CN100.EnterprisePlatform.Configuration.ImageElement.NamePropertyName]));
            }
            set
            {
                base[global::CN100.EnterprisePlatform.Configuration.ImageElement.NamePropertyName] = value;
            }
        }
        #endregion
        
        #region Url Property
        /// <summary>
        /// The XML name of the <see cref="Url"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string UrlPropertyName = "url";
        
        /// <summary>
        /// Gets or sets the Url.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.ComponentModel.DescriptionAttribute("The Url.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CN100.EnterprisePlatform.Configuration.ImageElement.UrlPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual string Url
        {
            get
            {
                return ((string)(base[global::CN100.EnterprisePlatform.Configuration.ImageElement.UrlPropertyName]));
            }
            set
            {
                base[global::CN100.EnterprisePlatform.Configuration.ImageElement.UrlPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace CN100.EnterprisePlatform.Configuration
{
    
    
    /// <summary>
    /// A collection of MqElement instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::CN100.EnterprisePlatform.Configuration.MqElement), CollectionType=global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate, AddItemName=global::CN100.EnterprisePlatform.Configuration.MqElementCollection.MqElementPropertyName)]
    public partial class MqElementCollection : global::System.Configuration.ConfigurationElementCollection
    {
        
        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::CN100.EnterprisePlatform.Configuration.MqElement"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string MqElementPropertyName = "host";
        #endregion
        
        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate;
            }
        }
        
        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        protected override string ElementName
        {
            get
            {
                return global::CN100.EnterprisePlatform.Configuration.MqElementCollection.MqElementPropertyName;
            }
        }
        
        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::CN100.EnterprisePlatform.Configuration.MqElementCollection.MqElementPropertyName);
        }
        
        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::CN100.EnterprisePlatform.Configuration.MqElement)(element)).ServiceName;
        }
        
        /// <summary>
        /// Creates a new <see cref="global::CN100.EnterprisePlatform.Configuration.MqElement"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::CN100.EnterprisePlatform.Configuration.MqElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::CN100.EnterprisePlatform.Configuration.MqElement();
        }
        #endregion
        
        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::CN100.EnterprisePlatform.Configuration.MqElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::CN100.EnterprisePlatform.Configuration.MqElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public global::CN100.EnterprisePlatform.Configuration.MqElement this[int index]
        {
            get
            {
                return ((global::CN100.EnterprisePlatform.Configuration.MqElement)(base.BaseGet(index)));
            }
        }
        
        /// <summary>
        /// Gets the <see cref="global::CN100.EnterprisePlatform.Configuration.MqElement"/> with the specified key.
        /// </summary>
        /// <param name="serviceName">The key of the <see cref="global::CN100.EnterprisePlatform.Configuration.MqElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public global::CN100.EnterprisePlatform.Configuration.MqElement this[object serviceName]
        {
            get
            {
                return ((global::CN100.EnterprisePlatform.Configuration.MqElement)(base.BaseGet(serviceName)));
            }
        }
        #endregion
        
        #region Add
        /// <summary>
        /// Adds the specified <see cref="global::CN100.EnterprisePlatform.Configuration.MqElement"/> to the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="host">The <see cref="global::CN100.EnterprisePlatform.Configuration.MqElement"/> to add.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public void Add(global::CN100.EnterprisePlatform.Configuration.MqElement host)
        {
            base.BaseAdd(host);
        }
        #endregion
        
        #region Remove
        /// <summary>
        /// Removes the specified <see cref="global::CN100.EnterprisePlatform.Configuration.MqElement"/> from the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="host">The <see cref="global::CN100.EnterprisePlatform.Configuration.MqElement"/> to remove.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public void Remove(global::CN100.EnterprisePlatform.Configuration.MqElement host)
        {
            base.BaseRemove(this.GetElementKey(host));
        }
        #endregion
        
        #region GetItem
        /// <summary>
        /// Gets the <see cref="global::CN100.EnterprisePlatform.Configuration.MqElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::CN100.EnterprisePlatform.Configuration.MqElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public global::CN100.EnterprisePlatform.Configuration.MqElement GetItemAt(int index)
        {
            return ((global::CN100.EnterprisePlatform.Configuration.MqElement)(base.BaseGet(index)));
        }
        
        /// <summary>
        /// Gets the <see cref="global::CN100.EnterprisePlatform.Configuration.MqElement"/> with the specified key.
        /// </summary>
        /// <param name="serviceName">The key of the <see cref="global::CN100.EnterprisePlatform.Configuration.MqElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public global::CN100.EnterprisePlatform.Configuration.MqElement GetItemByKey(string serviceName)
        {
            return ((global::CN100.EnterprisePlatform.Configuration.MqElement)(base.BaseGet(((object)(serviceName)))));
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
    }
}
namespace CN100.EnterprisePlatform.Configuration
{
    
    
    /// <summary>
    /// The MqElement Configuration Element.
    /// </summary>
    public partial class MqElement : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region ServiceName Property
        /// <summary>
        /// The XML name of the <see cref="ServiceName"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string ServiceNamePropertyName = "serviceName";
        
        /// <summary>
        /// Gets or sets the ServiceName.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.ComponentModel.DescriptionAttribute("The ServiceName.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CN100.EnterprisePlatform.Configuration.MqElement.ServiceNamePropertyName, IsRequired=true, IsKey=true, IsDefaultCollection=false)]
        public virtual string ServiceName
        {
            get
            {
                return ((string)(base[global::CN100.EnterprisePlatform.Configuration.MqElement.ServiceNamePropertyName]));
            }
            set
            {
                base[global::CN100.EnterprisePlatform.Configuration.MqElement.ServiceNamePropertyName] = value;
            }
        }
        #endregion
        
        #region Ip Property
        /// <summary>
        /// The XML name of the <see cref="Ip"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string IpPropertyName = "ip";
        
        /// <summary>
        /// Gets or sets the Ip.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.ComponentModel.DescriptionAttribute("The Ip.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CN100.EnterprisePlatform.Configuration.MqElement.IpPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual string Ip
        {
            get
            {
                return ((string)(base[global::CN100.EnterprisePlatform.Configuration.MqElement.IpPropertyName]));
            }
            set
            {
                base[global::CN100.EnterprisePlatform.Configuration.MqElement.IpPropertyName] = value;
            }
        }
        #endregion
        
        #region Port Property
        /// <summary>
        /// The XML name of the <see cref="Port"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string PortPropertyName = "port";
        
        /// <summary>
        /// Gets or sets the Port.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.ComponentModel.DescriptionAttribute("The Port.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CN100.EnterprisePlatform.Configuration.MqElement.PortPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual int Port
        {
            get
            {
                return ((int)(base[global::CN100.EnterprisePlatform.Configuration.MqElement.PortPropertyName]));
            }
            set
            {
                base[global::CN100.EnterprisePlatform.Configuration.MqElement.PortPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace CN100.EnterprisePlatform.Configuration
{
    
    
    /// <summary>
    /// The StyleSection Configuration Section.
    /// </summary>
    public partial class StyleSection : global::System.Configuration.ConfigurationSection
    {
        
        #region Singleton Instance
        /// <summary>
        /// The XML name of the StyleSection Configuration Section.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string StyleSectionSectionName = "CN100SectionGroup/styleSection";
        
        /// <summary>
        /// Gets the StyleSection instance.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public static global::CN100.EnterprisePlatform.Configuration.StyleSection Instance
        {
            get
            {
                return ((global::CN100.EnterprisePlatform.Configuration.StyleSection)(global::System.Configuration.ConfigurationManager.GetSection(global::CN100.EnterprisePlatform.Configuration.StyleSection.StyleSectionSectionName)));
            }
        }
        #endregion
        
        #region Xmlns Property
        /// <summary>
        /// The XML name of the <see cref="Xmlns"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string XmlnsPropertyName = "xmlns";
        
        /// <summary>
        /// Gets the XML namespace of this Configuration Section.
        /// </summary>
        /// <remarks>
        /// This property makes sure that if the configuration file contains the XML namespace,
        /// the parser doesn't throw an exception because it encounters the unknown "xmlns" attribute.
        /// </remarks>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CN100.EnterprisePlatform.Configuration.StyleSection.XmlnsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public string Xmlns
        {
            get
            {
                return ((string)(base[global::CN100.EnterprisePlatform.Configuration.StyleSection.XmlnsPropertyName]));
            }
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Urls Property
        /// <summary>
        /// The XML name of the <see cref="Urls"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string UrlsPropertyName = "urls";
        
        /// <summary>
        /// Gets or sets the Urls.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.ComponentModel.DescriptionAttribute("The Urls.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CN100.EnterprisePlatform.Configuration.StyleSection.UrlsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::CN100.EnterprisePlatform.Configuration.StyleElementCollection Urls
        {
            get
            {
                return ((global::CN100.EnterprisePlatform.Configuration.StyleElementCollection)(base[global::CN100.EnterprisePlatform.Configuration.StyleSection.UrlsPropertyName]));
            }
            set
            {
                base[global::CN100.EnterprisePlatform.Configuration.StyleSection.UrlsPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace CN100.EnterprisePlatform.Configuration
{
    
    
    /// <summary>
    /// A collection of StyleElement instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::CN100.EnterprisePlatform.Configuration.StyleElement), CollectionType=global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate, AddItemName=global::CN100.EnterprisePlatform.Configuration.StyleElementCollection.StyleElementPropertyName)]
    public partial class StyleElementCollection : global::System.Configuration.ConfigurationElementCollection
    {
        
        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::CN100.EnterprisePlatform.Configuration.StyleElement"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string StyleElementPropertyName = "url";
        #endregion
        
        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate;
            }
        }
        
        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        protected override string ElementName
        {
            get
            {
                return global::CN100.EnterprisePlatform.Configuration.StyleElementCollection.StyleElementPropertyName;
            }
        }
        
        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::CN100.EnterprisePlatform.Configuration.StyleElementCollection.StyleElementPropertyName);
        }
        
        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::CN100.EnterprisePlatform.Configuration.StyleElement)(element)).Name;
        }
        
        /// <summary>
        /// Creates a new <see cref="global::CN100.EnterprisePlatform.Configuration.StyleElement"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::CN100.EnterprisePlatform.Configuration.StyleElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::CN100.EnterprisePlatform.Configuration.StyleElement();
        }
        #endregion
        
        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::CN100.EnterprisePlatform.Configuration.StyleElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::CN100.EnterprisePlatform.Configuration.StyleElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public global::CN100.EnterprisePlatform.Configuration.StyleElement this[int index]
        {
            get
            {
                return ((global::CN100.EnterprisePlatform.Configuration.StyleElement)(base.BaseGet(index)));
            }
        }
        
        /// <summary>
        /// Gets the <see cref="global::CN100.EnterprisePlatform.Configuration.StyleElement"/> with the specified key.
        /// </summary>
        /// <param name="name">The key of the <see cref="global::CN100.EnterprisePlatform.Configuration.StyleElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public global::CN100.EnterprisePlatform.Configuration.StyleElement this[object name]
        {
            get
            {
                return ((global::CN100.EnterprisePlatform.Configuration.StyleElement)(base.BaseGet(name)));
            }
        }
        #endregion
        
        #region Add
        /// <summary>
        /// Adds the specified <see cref="global::CN100.EnterprisePlatform.Configuration.StyleElement"/> to the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="url">The <see cref="global::CN100.EnterprisePlatform.Configuration.StyleElement"/> to add.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public void Add(global::CN100.EnterprisePlatform.Configuration.StyleElement url)
        {
            base.BaseAdd(url);
        }
        #endregion
        
        #region Remove
        /// <summary>
        /// Removes the specified <see cref="global::CN100.EnterprisePlatform.Configuration.StyleElement"/> from the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="url">The <see cref="global::CN100.EnterprisePlatform.Configuration.StyleElement"/> to remove.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public void Remove(global::CN100.EnterprisePlatform.Configuration.StyleElement url)
        {
            base.BaseRemove(this.GetElementKey(url));
        }
        #endregion
        
        #region GetItem
        /// <summary>
        /// Gets the <see cref="global::CN100.EnterprisePlatform.Configuration.StyleElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::CN100.EnterprisePlatform.Configuration.StyleElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public global::CN100.EnterprisePlatform.Configuration.StyleElement GetItemAt(int index)
        {
            return ((global::CN100.EnterprisePlatform.Configuration.StyleElement)(base.BaseGet(index)));
        }
        
        /// <summary>
        /// Gets the <see cref="global::CN100.EnterprisePlatform.Configuration.StyleElement"/> with the specified key.
        /// </summary>
        /// <param name="name">The key of the <see cref="global::CN100.EnterprisePlatform.Configuration.StyleElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public global::CN100.EnterprisePlatform.Configuration.StyleElement GetItemByKey(string name)
        {
            return ((global::CN100.EnterprisePlatform.Configuration.StyleElement)(base.BaseGet(((object)(name)))));
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
    }
}
namespace CN100.EnterprisePlatform.Configuration
{
    
    
    /// <summary>
    /// The StyleElement Configuration Element.
    /// </summary>
    public partial class StyleElement : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Name Property
        /// <summary>
        /// The XML name of the <see cref="Name"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string NamePropertyName = "name";
        
        /// <summary>
        /// Gets or sets the Name.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.ComponentModel.DescriptionAttribute("The Name.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CN100.EnterprisePlatform.Configuration.StyleElement.NamePropertyName, IsRequired=true, IsKey=true, IsDefaultCollection=false)]
        public virtual string Name
        {
            get
            {
                return ((string)(base[global::CN100.EnterprisePlatform.Configuration.StyleElement.NamePropertyName]));
            }
            set
            {
                base[global::CN100.EnterprisePlatform.Configuration.StyleElement.NamePropertyName] = value;
            }
        }
        #endregion
        
        #region Url Property
        /// <summary>
        /// The XML name of the <see cref="Url"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string UrlPropertyName = "url";
        
        /// <summary>
        /// Gets or sets the Url.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.ComponentModel.DescriptionAttribute("The Url.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CN100.EnterprisePlatform.Configuration.StyleElement.UrlPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual string Url
        {
            get
            {
                return ((string)(base[global::CN100.EnterprisePlatform.Configuration.StyleElement.UrlPropertyName]));
            }
            set
            {
                base[global::CN100.EnterprisePlatform.Configuration.StyleElement.UrlPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace CN100.EnterprisePlatform.Configuration
{
    
    
    /// <summary>
    /// The EmailSection Configuration Section.
    /// </summary>
    public partial class EmailSection : global::System.Configuration.ConfigurationSection
    {
        
        #region Singleton Instance
        /// <summary>
        /// The XML name of the EmailSection Configuration Section.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string EmailSectionSectionName = "CN100SectionGroup/emailSection";
        
        /// <summary>
        /// Gets the EmailSection instance.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public static global::CN100.EnterprisePlatform.Configuration.EmailSection Instance
        {
            get
            {
                return ((global::CN100.EnterprisePlatform.Configuration.EmailSection)(global::System.Configuration.ConfigurationManager.GetSection(global::CN100.EnterprisePlatform.Configuration.EmailSection.EmailSectionSectionName)));
            }
        }
        #endregion
        
        #region Xmlns Property
        /// <summary>
        /// The XML name of the <see cref="Xmlns"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string XmlnsPropertyName = "xmlns";
        
        /// <summary>
        /// Gets the XML namespace of this Configuration Section.
        /// </summary>
        /// <remarks>
        /// This property makes sure that if the configuration file contains the XML namespace,
        /// the parser doesn't throw an exception because it encounters the unknown "xmlns" attribute.
        /// </remarks>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CN100.EnterprisePlatform.Configuration.EmailSection.XmlnsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public string Xmlns
        {
            get
            {
                return ((string)(base[global::CN100.EnterprisePlatform.Configuration.EmailSection.XmlnsPropertyName]));
            }
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Hosts Property
        /// <summary>
        /// The XML name of the <see cref="Hosts"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string HostsPropertyName = "hosts";
        
        /// <summary>
        /// Gets or sets the Hosts.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.ComponentModel.DescriptionAttribute("The Hosts.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CN100.EnterprisePlatform.Configuration.EmailSection.HostsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::CN100.EnterprisePlatform.Configuration.EmailElementCollection Hosts
        {
            get
            {
                return ((global::CN100.EnterprisePlatform.Configuration.EmailElementCollection)(base[global::CN100.EnterprisePlatform.Configuration.EmailSection.HostsPropertyName]));
            }
            set
            {
                base[global::CN100.EnterprisePlatform.Configuration.EmailSection.HostsPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace CN100.EnterprisePlatform.Configuration
{
    
    
    /// <summary>
    /// A collection of EmailElement instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::CN100.EnterprisePlatform.Configuration.EmailElement), CollectionType=global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate, AddItemName=global::CN100.EnterprisePlatform.Configuration.EmailElementCollection.EmailElementPropertyName)]
    public partial class EmailElementCollection : global::System.Configuration.ConfigurationElementCollection
    {
        
        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::CN100.EnterprisePlatform.Configuration.EmailElement"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string EmailElementPropertyName = "host";
        #endregion
        
        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate;
            }
        }
        
        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        protected override string ElementName
        {
            get
            {
                return global::CN100.EnterprisePlatform.Configuration.EmailElementCollection.EmailElementPropertyName;
            }
        }
        
        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::CN100.EnterprisePlatform.Configuration.EmailElementCollection.EmailElementPropertyName);
        }
        
        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::CN100.EnterprisePlatform.Configuration.EmailElement)(element)).Name;
        }
        
        /// <summary>
        /// Creates a new <see cref="global::CN100.EnterprisePlatform.Configuration.EmailElement"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::CN100.EnterprisePlatform.Configuration.EmailElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::CN100.EnterprisePlatform.Configuration.EmailElement();
        }
        #endregion
        
        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::CN100.EnterprisePlatform.Configuration.EmailElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::CN100.EnterprisePlatform.Configuration.EmailElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public global::CN100.EnterprisePlatform.Configuration.EmailElement this[int index]
        {
            get
            {
                return ((global::CN100.EnterprisePlatform.Configuration.EmailElement)(base.BaseGet(index)));
            }
        }
        
        /// <summary>
        /// Gets the <see cref="global::CN100.EnterprisePlatform.Configuration.EmailElement"/> with the specified key.
        /// </summary>
        /// <param name="name">The key of the <see cref="global::CN100.EnterprisePlatform.Configuration.EmailElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public global::CN100.EnterprisePlatform.Configuration.EmailElement this[object name]
        {
            get
            {
                return ((global::CN100.EnterprisePlatform.Configuration.EmailElement)(base.BaseGet(name)));
            }
        }
        #endregion
        
        #region Add
        /// <summary>
        /// Adds the specified <see cref="global::CN100.EnterprisePlatform.Configuration.EmailElement"/> to the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="host">The <see cref="global::CN100.EnterprisePlatform.Configuration.EmailElement"/> to add.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public void Add(global::CN100.EnterprisePlatform.Configuration.EmailElement host)
        {
            base.BaseAdd(host);
        }
        #endregion
        
        #region Remove
        /// <summary>
        /// Removes the specified <see cref="global::CN100.EnterprisePlatform.Configuration.EmailElement"/> from the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="host">The <see cref="global::CN100.EnterprisePlatform.Configuration.EmailElement"/> to remove.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public void Remove(global::CN100.EnterprisePlatform.Configuration.EmailElement host)
        {
            base.BaseRemove(this.GetElementKey(host));
        }
        #endregion
        
        #region GetItem
        /// <summary>
        /// Gets the <see cref="global::CN100.EnterprisePlatform.Configuration.EmailElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::CN100.EnterprisePlatform.Configuration.EmailElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public global::CN100.EnterprisePlatform.Configuration.EmailElement GetItemAt(int index)
        {
            return ((global::CN100.EnterprisePlatform.Configuration.EmailElement)(base.BaseGet(index)));
        }
        
        /// <summary>
        /// Gets the <see cref="global::CN100.EnterprisePlatform.Configuration.EmailElement"/> with the specified key.
        /// </summary>
        /// <param name="name">The key of the <see cref="global::CN100.EnterprisePlatform.Configuration.EmailElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public global::CN100.EnterprisePlatform.Configuration.EmailElement GetItemByKey(string name)
        {
            return ((global::CN100.EnterprisePlatform.Configuration.EmailElement)(base.BaseGet(((object)(name)))));
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
    }
}
namespace CN100.EnterprisePlatform.Configuration
{
    
    
    /// <summary>
    /// The EmailElement Configuration Element.
    /// </summary>
    public partial class EmailElement : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Name Property
        /// <summary>
        /// The XML name of the <see cref="Name"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string NamePropertyName = "name";
        
        /// <summary>
        /// Gets the mail server address
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.ComponentModel.DescriptionAttribute("The mail server address")]
        [global::System.ComponentModel.ReadOnlyAttribute(true)]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CN100.EnterprisePlatform.Configuration.EmailElement.NamePropertyName, IsRequired=true, IsKey=true, IsDefaultCollection=false)]
        public virtual string Name
        {
            get
            {
                return ((string)(base[global::CN100.EnterprisePlatform.Configuration.EmailElement.NamePropertyName]));
            }
        }
        #endregion
        
        #region Address Property
        /// <summary>
        /// The XML name of the <see cref="Address"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string AddressPropertyName = "address";
        
        /// <summary>
        /// Gets mailing address
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.ComponentModel.DescriptionAttribute("Mailing address")]
        [global::System.ComponentModel.ReadOnlyAttribute(true)]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CN100.EnterprisePlatform.Configuration.EmailElement.AddressPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual string Address
        {
            get
            {
                return ((string)(base[global::CN100.EnterprisePlatform.Configuration.EmailElement.AddressPropertyName]));
            }
        }
        #endregion
        
        #region Account Property
        /// <summary>
        /// The XML name of the <see cref="Account"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string AccountPropertyName = "account";
        
        /// <summary>
        /// Gets mail server login
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.ComponentModel.DescriptionAttribute("Mail server login")]
        [global::System.ComponentModel.ReadOnlyAttribute(true)]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CN100.EnterprisePlatform.Configuration.EmailElement.AccountPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual string Account
        {
            get
            {
                return ((string)(base[global::CN100.EnterprisePlatform.Configuration.EmailElement.AccountPropertyName]));
            }
        }
        #endregion
        
        #region Password Property
        /// <summary>
        /// The XML name of the <see cref="Password"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string PasswordPropertyName = "password";
        
        /// <summary>
        /// Gets mail server login password
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.ComponentModel.DescriptionAttribute("Mail server login password")]
        [global::System.ComponentModel.ReadOnlyAttribute(true)]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CN100.EnterprisePlatform.Configuration.EmailElement.PasswordPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual string Password
        {
            get
            {
                return ((string)(base[global::CN100.EnterprisePlatform.Configuration.EmailElement.PasswordPropertyName]));
            }
        }
        #endregion
    }
}
namespace CN100.EnterprisePlatform.Configuration
{
    
    
    /// <summary>
    /// The BaseSection Configuration Section.
    /// </summary>
    public partial class BaseSection : global::System.Configuration.ConfigurationSection
    {
        
        #region Singleton Instance
        /// <summary>
        /// The XML name of the BaseSection Configuration Section.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string BaseSectionSectionName = "CN100SectionGroup/baseSection";
        
        /// <summary>
        /// Gets the BaseSection instance.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public static global::CN100.EnterprisePlatform.Configuration.BaseSection Instance
        {
            get
            {
                return ((global::CN100.EnterprisePlatform.Configuration.BaseSection)(global::System.Configuration.ConfigurationManager.GetSection(global::CN100.EnterprisePlatform.Configuration.BaseSection.BaseSectionSectionName)));
            }
        }
        #endregion
        
        #region Xmlns Property
        /// <summary>
        /// The XML name of the <see cref="Xmlns"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string XmlnsPropertyName = "xmlns";
        
        /// <summary>
        /// Gets the XML namespace of this Configuration Section.
        /// </summary>
        /// <remarks>
        /// This property makes sure that if the configuration file contains the XML namespace,
        /// the parser doesn't throw an exception because it encounters the unknown "xmlns" attribute.
        /// </remarks>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CN100.EnterprisePlatform.Configuration.BaseSection.XmlnsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public string Xmlns
        {
            get
            {
                return ((string)(base[global::CN100.EnterprisePlatform.Configuration.BaseSection.XmlnsPropertyName]));
            }
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Base Property
        /// <summary>
        /// The XML name of the <see cref="Base"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string BasePropertyName = "base";
        
        /// <summary>
        /// Gets or sets the Base.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.ComponentModel.DescriptionAttribute("The Base.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CN100.EnterprisePlatform.Configuration.BaseSection.BasePropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::CN100.EnterprisePlatform.Configuration.BaseElementCollection Base
        {
            get
            {
                return ((global::CN100.EnterprisePlatform.Configuration.BaseElementCollection)(base[global::CN100.EnterprisePlatform.Configuration.BaseSection.BasePropertyName]));
            }
            set
            {
                base[global::CN100.EnterprisePlatform.Configuration.BaseSection.BasePropertyName] = value;
            }
        }
        #endregion
    }
}
namespace CN100.EnterprisePlatform.Configuration
{
    
    
    /// <summary>
    /// A collection of BaseElement instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::CN100.EnterprisePlatform.Configuration.BaseElement), CollectionType=global::System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMapAlternate, AddItemName="add", RemoveItemName="remove", ClearItemsName="clear")]
    public partial class BaseElementCollection : global::System.Configuration.ConfigurationElementCollection
    {
        
        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::CN100.EnterprisePlatform.Configuration.BaseElement"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string BaseElementPropertyName = "baseElement";
        #endregion
        
        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMapAlternate;
            }
        }
        
        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        protected override string ElementName
        {
            get
            {
                return global::CN100.EnterprisePlatform.Configuration.BaseElementCollection.BaseElementPropertyName;
            }
        }
        
        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::CN100.EnterprisePlatform.Configuration.BaseElementCollection.BaseElementPropertyName);
        }
        
        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::CN100.EnterprisePlatform.Configuration.BaseElement)(element)).Key;
        }
        
        /// <summary>
        /// Creates a new <see cref="global::CN100.EnterprisePlatform.Configuration.BaseElement"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::CN100.EnterprisePlatform.Configuration.BaseElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::CN100.EnterprisePlatform.Configuration.BaseElement();
        }
        #endregion
        
        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::CN100.EnterprisePlatform.Configuration.BaseElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::CN100.EnterprisePlatform.Configuration.BaseElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public global::CN100.EnterprisePlatform.Configuration.BaseElement this[int index]
        {
            get
            {
                return ((global::CN100.EnterprisePlatform.Configuration.BaseElement)(base.BaseGet(index)));
            }
        }
        
        /// <summary>
        /// Gets the <see cref="global::CN100.EnterprisePlatform.Configuration.BaseElement"/> with the specified key.
        /// </summary>
        /// <param name="key">The key of the <see cref="global::CN100.EnterprisePlatform.Configuration.BaseElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public global::CN100.EnterprisePlatform.Configuration.BaseElement this[object key]
        {
            get
            {
                return ((global::CN100.EnterprisePlatform.Configuration.BaseElement)(base.BaseGet(key)));
            }
        }
        #endregion
        
        #region Add
        /// <summary>
        /// Adds the specified <see cref="global::CN100.EnterprisePlatform.Configuration.BaseElement"/> to the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="baseElement">The <see cref="global::CN100.EnterprisePlatform.Configuration.BaseElement"/> to add.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public void Add(global::CN100.EnterprisePlatform.Configuration.BaseElement baseElement)
        {
            base.BaseAdd(baseElement);
        }
        #endregion
        
        #region Remove
        /// <summary>
        /// Removes the specified <see cref="global::CN100.EnterprisePlatform.Configuration.BaseElement"/> from the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="baseElement">The <see cref="global::CN100.EnterprisePlatform.Configuration.BaseElement"/> to remove.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public void Remove(global::CN100.EnterprisePlatform.Configuration.BaseElement baseElement)
        {
            base.BaseRemove(this.GetElementKey(baseElement));
        }
        #endregion
        
        #region GetItem
        /// <summary>
        /// Gets the <see cref="global::CN100.EnterprisePlatform.Configuration.BaseElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::CN100.EnterprisePlatform.Configuration.BaseElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public global::CN100.EnterprisePlatform.Configuration.BaseElement GetItemAt(int index)
        {
            return ((global::CN100.EnterprisePlatform.Configuration.BaseElement)(base.BaseGet(index)));
        }
        
        /// <summary>
        /// Gets the <see cref="global::CN100.EnterprisePlatform.Configuration.BaseElement"/> with the specified key.
        /// </summary>
        /// <param name="key">The key of the <see cref="global::CN100.EnterprisePlatform.Configuration.BaseElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public global::CN100.EnterprisePlatform.Configuration.BaseElement GetItemByKey(string key)
        {
            return ((global::CN100.EnterprisePlatform.Configuration.BaseElement)(base.BaseGet(((object)(key)))));
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
    }
}
namespace CN100.EnterprisePlatform.Configuration
{
    
    
    /// <summary>
    /// The BaseElement Configuration Element.
    /// </summary>
    public partial class BaseElement : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Key Property
        /// <summary>
        /// The XML name of the <see cref="Key"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string KeyPropertyName = "key";
        
        /// <summary>
        /// Gets or sets the Key.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.ComponentModel.DescriptionAttribute("The Key.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CN100.EnterprisePlatform.Configuration.BaseElement.KeyPropertyName, IsRequired=true, IsKey=true, IsDefaultCollection=false)]
        public virtual string Key
        {
            get
            {
                return ((string)(base[global::CN100.EnterprisePlatform.Configuration.BaseElement.KeyPropertyName]));
            }
            set
            {
                base[global::CN100.EnterprisePlatform.Configuration.BaseElement.KeyPropertyName] = value;
            }
        }
        #endregion
        
        #region Value Property
        /// <summary>
        /// The XML name of the <see cref="Value"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string ValuePropertyName = "value";
        
        /// <summary>
        /// Gets or sets the Value.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.ComponentModel.DescriptionAttribute("The Value.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CN100.EnterprisePlatform.Configuration.BaseElement.ValuePropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual string Value
        {
            get
            {
                return ((string)(base[global::CN100.EnterprisePlatform.Configuration.BaseElement.ValuePropertyName]));
            }
            set
            {
                base[global::CN100.EnterprisePlatform.Configuration.BaseElement.ValuePropertyName] = value;
            }
        }
        #endregion
    }
}
namespace CN100.EnterprisePlatform.Configuration
{
    
    
    /// <summary>
    /// A collection of WcfElement instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::CN100.EnterprisePlatform.Configuration.WcfElement), CollectionType=global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate, AddItemName=global::CN100.EnterprisePlatform.Configuration.WcfItemsElementCollection.WcfElementPropertyName)]
    public partial class WcfItemsElementCollection : global::System.Configuration.ConfigurationElementCollection
    {
        
        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::CN100.EnterprisePlatform.Configuration.WcfElement"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string WcfElementPropertyName = "item";
        #endregion
        
        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate;
            }
        }
        
        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        protected override string ElementName
        {
            get
            {
                return global::CN100.EnterprisePlatform.Configuration.WcfItemsElementCollection.WcfElementPropertyName;
            }
        }
        
        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::CN100.EnterprisePlatform.Configuration.WcfItemsElementCollection.WcfElementPropertyName);
        }
        
        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::CN100.EnterprisePlatform.Configuration.WcfElement)(element)).Name;
        }
        
        /// <summary>
        /// Creates a new <see cref="global::CN100.EnterprisePlatform.Configuration.WcfElement"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::CN100.EnterprisePlatform.Configuration.WcfElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::CN100.EnterprisePlatform.Configuration.WcfElement();
        }
        #endregion
        
        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::CN100.EnterprisePlatform.Configuration.WcfElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::CN100.EnterprisePlatform.Configuration.WcfElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public global::CN100.EnterprisePlatform.Configuration.WcfElement this[int index]
        {
            get
            {
                return ((global::CN100.EnterprisePlatform.Configuration.WcfElement)(base.BaseGet(index)));
            }
        }
        
        /// <summary>
        /// Gets the <see cref="global::CN100.EnterprisePlatform.Configuration.WcfElement"/> with the specified key.
        /// </summary>
        /// <param name="name">The key of the <see cref="global::CN100.EnterprisePlatform.Configuration.WcfElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public global::CN100.EnterprisePlatform.Configuration.WcfElement this[object name]
        {
            get
            {
                return ((global::CN100.EnterprisePlatform.Configuration.WcfElement)(base.BaseGet(name)));
            }
        }
        #endregion
        
        #region Add
        /// <summary>
        /// Adds the specified <see cref="global::CN100.EnterprisePlatform.Configuration.WcfElement"/> to the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="item">The <see cref="global::CN100.EnterprisePlatform.Configuration.WcfElement"/> to add.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public void Add(global::CN100.EnterprisePlatform.Configuration.WcfElement item)
        {
            base.BaseAdd(item);
        }
        #endregion
        
        #region Remove
        /// <summary>
        /// Removes the specified <see cref="global::CN100.EnterprisePlatform.Configuration.WcfElement"/> from the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="item">The <see cref="global::CN100.EnterprisePlatform.Configuration.WcfElement"/> to remove.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public void Remove(global::CN100.EnterprisePlatform.Configuration.WcfElement item)
        {
            base.BaseRemove(this.GetElementKey(item));
        }
        #endregion
        
        #region GetItem
        /// <summary>
        /// Gets the <see cref="global::CN100.EnterprisePlatform.Configuration.WcfElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::CN100.EnterprisePlatform.Configuration.WcfElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public global::CN100.EnterprisePlatform.Configuration.WcfElement GetItemAt(int index)
        {
            return ((global::CN100.EnterprisePlatform.Configuration.WcfElement)(base.BaseGet(index)));
        }
        
        /// <summary>
        /// Gets the <see cref="global::CN100.EnterprisePlatform.Configuration.WcfElement"/> with the specified key.
        /// </summary>
        /// <param name="name">The key of the <see cref="global::CN100.EnterprisePlatform.Configuration.WcfElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public global::CN100.EnterprisePlatform.Configuration.WcfElement GetItemByKey(string name)
        {
            return ((global::CN100.EnterprisePlatform.Configuration.WcfElement)(base.BaseGet(((object)(name)))));
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Name Property
        /// <summary>
        /// The XML name of the <see cref="Name"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string NamePropertyName = "name";
        
        /// <summary>
        /// Gets or sets the Name.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.ComponentModel.DescriptionAttribute("The Name.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CN100.EnterprisePlatform.Configuration.WcfItemsElementCollection.NamePropertyName, IsRequired=true, IsKey=true, IsDefaultCollection=false)]
        public virtual string Name
        {
            get
            {
                return ((string)(base[global::CN100.EnterprisePlatform.Configuration.WcfItemsElementCollection.NamePropertyName]));
            }
            set
            {
                base[global::CN100.EnterprisePlatform.Configuration.WcfItemsElementCollection.NamePropertyName] = value;
            }
        }
        #endregion
    }
}
