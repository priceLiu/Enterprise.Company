//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CN100.WcfService
{
    
    
    /// <summary>
    /// The WcfServiceSection Configuration Section.
    /// </summary>
    public partial class WcfServiceSection : global::System.Configuration.ConfigurationSection
    {
        
        #region Singleton Instance
        /// <summary>
        /// The XML name of the WcfServiceSection Configuration Section.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string WcfServiceSectionSectionName = "wcfServiceSection";
        
        /// <summary>
        /// Gets the WcfServiceSection instance.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public static global::CN100.WcfService.WcfServiceSection Instance
        {
            get
            {
                return ((global::CN100.WcfService.WcfServiceSection)(global::System.Configuration.ConfigurationManager.GetSection(global::CN100.WcfService.WcfServiceSection.WcfServiceSectionSectionName)));
            }
        }
        #endregion
        
        #region Xmlns Property
        /// <summary>
        /// The XML name of the <see cref="Xmlns"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string XmlnsPropertyName = "xmlns";
        
        /// <summary>
        /// Gets the XML namespace of this Configuration Section.
        /// </summary>
        /// <remarks>
        /// This property makes sure that if the configuration file contains the XML namespace,
        /// the parser doesn't throw an exception because it encounters the unknown "xmlns" attribute.
        /// </remarks>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CN100.WcfService.WcfServiceSection.XmlnsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public string Xmlns
        {
            get
            {
                return ((string)(base[global::CN100.WcfService.WcfServiceSection.XmlnsPropertyName]));
            }
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Version Property
        /// <summary>
        /// The XML name of the <see cref="Version"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string VersionPropertyName = "version";
        
        /// <summary>
        /// Gets or sets the Version.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.ComponentModel.DescriptionAttribute("The Version.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CN100.WcfService.WcfServiceSection.VersionPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual string Version
        {
            get
            {
                return ((string)(base[global::CN100.WcfService.WcfServiceSection.VersionPropertyName]));
            }
            set
            {
                base[global::CN100.WcfService.WcfServiceSection.VersionPropertyName] = value;
            }
        }
        #endregion
        
        #region ServiceName Property
        /// <summary>
        /// The XML name of the <see cref="ServiceName"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string ServiceNamePropertyName = "serviceName";
        
        /// <summary>
        /// Gets or sets the ServiceName.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.ComponentModel.DescriptionAttribute("The ServiceName.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CN100.WcfService.WcfServiceSection.ServiceNamePropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual string ServiceName
        {
            get
            {
                return ((string)(base[global::CN100.WcfService.WcfServiceSection.ServiceNamePropertyName]));
            }
            set
            {
                base[global::CN100.WcfService.WcfServiceSection.ServiceNamePropertyName] = value;
            }
        }
        #endregion
        
        #region Host Property
        /// <summary>
        /// The XML name of the <see cref="Host"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string HostPropertyName = "host";
        
        /// <summary>
        /// Gets or sets the Host.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.ComponentModel.DescriptionAttribute("The Host.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CN100.WcfService.WcfServiceSection.HostPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::CN100.WcfService.WcfServiceElement Host
        {
            get
            {
                return ((global::CN100.WcfService.WcfServiceElement)(base[global::CN100.WcfService.WcfServiceSection.HostPropertyName]));
            }
            set
            {
                base[global::CN100.WcfService.WcfServiceSection.HostPropertyName] = value;
            }
        }
        #endregion
        
        #region Items Property
        /// <summary>
        /// The XML name of the <see cref="Items"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string ItemsPropertyName = "items";
        
        /// <summary>
        /// Gets or sets the Items.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.ComponentModel.DescriptionAttribute("The Items.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CN100.WcfService.WcfServiceSection.ItemsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::CN100.WcfService.InterfaceElementColletion Items
        {
            get
            {
                return ((global::CN100.WcfService.InterfaceElementColletion)(base[global::CN100.WcfService.WcfServiceSection.ItemsPropertyName]));
            }
            set
            {
                base[global::CN100.WcfService.WcfServiceSection.ItemsPropertyName] = value;
            }
        }
        #endregion
        
        #region Services Property
        /// <summary>
        /// The XML name of the <see cref="Services"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string ServicesPropertyName = "services";
        
        /// <summary>
        /// Gets or sets the Services.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.ComponentModel.DescriptionAttribute("The Services.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CN100.WcfService.WcfServiceSection.ServicesPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::CN100.WcfService.ServiceElementCollection Services
        {
            get
            {
                return ((global::CN100.WcfService.ServiceElementCollection)(base[global::CN100.WcfService.WcfServiceSection.ServicesPropertyName]));
            }
            set
            {
                base[global::CN100.WcfService.WcfServiceSection.ServicesPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace CN100.WcfService
{
    
    
    /// <summary>
    /// The WcfServiceElement Configuration Element.
    /// </summary>
    public partial class WcfServiceElement : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Key Property
        /// <summary>
        /// The XML name of the <see cref="Key"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string KeyPropertyName = "key";
        
        /// <summary>
        /// Gets or sets "Service Name"
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.ComponentModel.DescriptionAttribute("\"Service Name\"")]
        [global::System.ComponentModel.DisplayNameAttribute("\"ServiceName\"")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CN100.WcfService.WcfServiceElement.KeyPropertyName, IsRequired=true, IsKey=true, IsDefaultCollection=false)]
        public virtual string Key
        {
            get
            {
                return ((string)(base[global::CN100.WcfService.WcfServiceElement.KeyPropertyName]));
            }
            set
            {
                base[global::CN100.WcfService.WcfServiceElement.KeyPropertyName] = value;
            }
        }
        #endregion
        
        #region IP Property
        /// <summary>
        /// The XML name of the <see cref="IP"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string IPPropertyName = "iP";
        
        /// <summary>
        /// Gets or sets "IP"
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.ComponentModel.DescriptionAttribute("\"IP\"")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CN100.WcfService.WcfServiceElement.IPPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual string IP
        {
            get
            {
                return ((string)(base[global::CN100.WcfService.WcfServiceElement.IPPropertyName]));
            }
            set
            {
                base[global::CN100.WcfService.WcfServiceElement.IPPropertyName] = value;
            }
        }
        #endregion
        
        #region Port Property
        /// <summary>
        /// The XML name of the <see cref="Port"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string PortPropertyName = "port";
        
        /// <summary>
        /// Gets or sets "Port number"
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.ComponentModel.DescriptionAttribute("\"Port number\"")]
        [global::System.ComponentModel.DisplayNameAttribute("\"Port\"")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CN100.WcfService.WcfServiceElement.PortPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual int Port
        {
            get
            {
                return ((int)(base[global::CN100.WcfService.WcfServiceElement.PortPropertyName]));
            }
            set
            {
                base[global::CN100.WcfService.WcfServiceElement.PortPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace CN100.WcfService
{
    
    
    /// <summary>
    /// The DllElement Configuration Element.
    /// </summary>
    public partial class DllElement : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Key Property
        /// <summary>
        /// The XML name of the <see cref="Key"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string KeyPropertyName = "key";
        
        /// <summary>
        /// Gets or sets the Key.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.ComponentModel.DescriptionAttribute("The Key.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CN100.WcfService.DllElement.KeyPropertyName, IsRequired=true, IsKey=true, IsDefaultCollection=false)]
        public virtual string Key
        {
            get
            {
                return ((string)(base[global::CN100.WcfService.DllElement.KeyPropertyName]));
            }
            set
            {
                base[global::CN100.WcfService.DllElement.KeyPropertyName] = value;
            }
        }
        #endregion
        
        #region DllName Property
        /// <summary>
        /// The XML name of the <see cref="DllName"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string DllNamePropertyName = "dllName";
        
        /// <summary>
        /// Gets or sets the DllName.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.ComponentModel.DescriptionAttribute("The DllName.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CN100.WcfService.DllElement.DllNamePropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual string DllName
        {
            get
            {
                return ((string)(base[global::CN100.WcfService.DllElement.DllNamePropertyName]));
            }
            set
            {
                base[global::CN100.WcfService.DllElement.DllNamePropertyName] = value;
            }
        }
        #endregion
    }
}
namespace CN100.WcfService
{
    
    
    /// <summary>
    /// A collection of DllElement instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::CN100.WcfService.DllElement), CollectionType=global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate, AddItemName=global::CN100.WcfService.InterfaceElementColletion.DllElementPropertyName)]
    public partial class InterfaceElementColletion : global::System.Configuration.ConfigurationElementCollection
    {
        
        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::CN100.WcfService.DllElement"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string DllElementPropertyName = "interface";
        #endregion
        
        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate;
            }
        }
        
        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        protected override string ElementName
        {
            get
            {
                return global::CN100.WcfService.InterfaceElementColletion.DllElementPropertyName;
            }
        }
        
        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::CN100.WcfService.InterfaceElementColletion.DllElementPropertyName);
        }
        
        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::CN100.WcfService.DllElement)(element)).Key;
        }
        
        /// <summary>
        /// Creates a new <see cref="global::CN100.WcfService.DllElement"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::CN100.WcfService.DllElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::CN100.WcfService.DllElement();
        }
        #endregion
        
        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::CN100.WcfService.DllElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::CN100.WcfService.DllElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public global::CN100.WcfService.DllElement this[int index]
        {
            get
            {
                return ((global::CN100.WcfService.DllElement)(base.BaseGet(index)));
            }
        }
        
        /// <summary>
        /// Gets the <see cref="global::CN100.WcfService.DllElement"/> with the specified key.
        /// </summary>
        /// <param name="key">The key of the <see cref="global::CN100.WcfService.DllElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public global::CN100.WcfService.DllElement this[object key]
        {
            get
            {
                return ((global::CN100.WcfService.DllElement)(base.BaseGet(key)));
            }
        }
        #endregion
        
        #region Add
        /// <summary>
        /// Adds the specified <see cref="global::CN100.WcfService.DllElement"/> to the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="interface">The <see cref="global::CN100.WcfService.DllElement"/> to add.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public void Add(global::CN100.WcfService.DllElement @interface)
        {
            base.BaseAdd(@interface);
        }
        #endregion
        
        #region Remove
        /// <summary>
        /// Removes the specified <see cref="global::CN100.WcfService.DllElement"/> from the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="interface">The <see cref="global::CN100.WcfService.DllElement"/> to remove.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public void Remove(global::CN100.WcfService.DllElement @interface)
        {
            base.BaseRemove(this.GetElementKey(@interface));
        }
        #endregion
        
        #region GetItem
        /// <summary>
        /// Gets the <see cref="global::CN100.WcfService.DllElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::CN100.WcfService.DllElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public global::CN100.WcfService.DllElement GetItemAt(int index)
        {
            return ((global::CN100.WcfService.DllElement)(base.BaseGet(index)));
        }
        
        /// <summary>
        /// Gets the <see cref="global::CN100.WcfService.DllElement"/> with the specified key.
        /// </summary>
        /// <param name="key">The key of the <see cref="global::CN100.WcfService.DllElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public global::CN100.WcfService.DllElement GetItemByKey(string key)
        {
            return ((global::CN100.WcfService.DllElement)(base.BaseGet(((object)(key)))));
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
    }
}
namespace CN100.WcfService
{
    
    
    /// <summary>
    /// A collection of DllElement instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::CN100.WcfService.DllElement), CollectionType=global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate, AddItemName=global::CN100.WcfService.ServiceElementCollection.DllElementPropertyName)]
    public partial class ServiceElementCollection : global::System.Configuration.ConfigurationElementCollection
    {
        
        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::CN100.WcfService.DllElement"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string DllElementPropertyName = "service";
        #endregion
        
        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate;
            }
        }
        
        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        protected override string ElementName
        {
            get
            {
                return global::CN100.WcfService.ServiceElementCollection.DllElementPropertyName;
            }
        }
        
        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::CN100.WcfService.ServiceElementCollection.DllElementPropertyName);
        }
        
        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::CN100.WcfService.DllElement)(element)).Key;
        }
        
        /// <summary>
        /// Creates a new <see cref="global::CN100.WcfService.DllElement"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::CN100.WcfService.DllElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::CN100.WcfService.DllElement();
        }
        #endregion
        
        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::CN100.WcfService.DllElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::CN100.WcfService.DllElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public global::CN100.WcfService.DllElement this[int index]
        {
            get
            {
                return ((global::CN100.WcfService.DllElement)(base.BaseGet(index)));
            }
        }
        
        /// <summary>
        /// Gets the <see cref="global::CN100.WcfService.DllElement"/> with the specified key.
        /// </summary>
        /// <param name="key">The key of the <see cref="global::CN100.WcfService.DllElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public global::CN100.WcfService.DllElement this[object key]
        {
            get
            {
                return ((global::CN100.WcfService.DllElement)(base.BaseGet(key)));
            }
        }
        #endregion
        
        #region Add
        /// <summary>
        /// Adds the specified <see cref="global::CN100.WcfService.DllElement"/> to the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="service">The <see cref="global::CN100.WcfService.DllElement"/> to add.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public void Add(global::CN100.WcfService.DllElement service)
        {
            base.BaseAdd(service);
        }
        #endregion
        
        #region Remove
        /// <summary>
        /// Removes the specified <see cref="global::CN100.WcfService.DllElement"/> from the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="service">The <see cref="global::CN100.WcfService.DllElement"/> to remove.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public void Remove(global::CN100.WcfService.DllElement service)
        {
            base.BaseRemove(this.GetElementKey(service));
        }
        #endregion
        
        #region GetItem
        /// <summary>
        /// Gets the <see cref="global::CN100.WcfService.DllElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::CN100.WcfService.DllElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public global::CN100.WcfService.DllElement GetItemAt(int index)
        {
            return ((global::CN100.WcfService.DllElement)(base.BaseGet(index)));
        }
        
        /// <summary>
        /// Gets the <see cref="global::CN100.WcfService.DllElement"/> with the specified key.
        /// </summary>
        /// <param name="key">The key of the <see cref="global::CN100.WcfService.DllElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public global::CN100.WcfService.DllElement GetItemByKey(string key)
        {
            return ((global::CN100.WcfService.DllElement)(base.BaseGet(((object)(key)))));
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
    }
}
